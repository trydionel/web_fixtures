# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{web_fixtures}
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Jeff Tucker"]
  s.date = %q{2010-09-19}
  s.default_executable = %q{web_fixtures}
  s.description = %q{WebFixtures lets you easily generate fixture files for web service responses}
  s.email = %q{trydionel@gmail.com}
  s.executables = ["web_fixtures"]
  s.extra_rdoc_files = [
    "LICENSE",
     "README.md"
  ]
  s.files = [
    ".document",
     ".gitignore",
     "LICENSE",
     "README.md",
     "Rakefile",
     "VERSION",
     "bin/web_fixtures",
     "lib/web_fixtures.rb",
     "lib/web_fixtures/base.rb",
     "lib/web_fixtures/dsl.rb",
     "lib/web_fixtures/request.rb",
     "spec/fixtures/google.txt",
     "spec/spec.opts",
     "spec/spec_helper.rb",
     "spec/web_fixtures/base_spec.rb",
     "spec/web_fixtures/dsl_spec.rb",
     "spec/web_fixtures/request_spec.rb",
     "web_fixtures.gemspec"
  ]
  s.homepage = %q{http://github.com/trydionel/web_fixtures}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{WebFixtures lets you easily generate fixture files for web service responses}
  s.test_files = [
    "spec/demo.rb",
     "spec/demo2.rb",
     "spec/spec_helper.rb",
     "spec/web_fixtures/base_spec.rb",
     "spec/web_fixtures/dsl_spec.rb",
     "spec/web_fixtures/request_spec.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<rspec>, [">= 1.2.9"])
    else
      s.add_dependency(%q<rspec>, [">= 1.2.9"])
    end
  else
    s.add_dependency(%q<rspec>, [">= 1.2.9"])
  end
end

